swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(1,10,by:0.5)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq<- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect(0.5, 55, -10, 6)
num_vect(c(0.5, 55, -10, 6))
num_vect<-(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect<1
tf
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Becca")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z", sep = ""))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <-rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data) <-my_na
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y<- x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
library(swril)
library(swirl)
swirl()
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c (4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector
)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2(1:20, 4,5)
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, cnames)
mydata <- colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == false
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
5!=7
5!==7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2, 4, 5))
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/boring_function.R')
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/boring_function.R')
submit()
boring_function('My first function!')
boring_function()
boring_function
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/my_mean.R')
my_mean(c(1,2,3))
my_mean(1:20)
source()
submit()
my_mean(c(4,5,10))
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/remainder.R')
remainder(7,4)
remainder(5)
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/evaluate.R')
evaluate(sum, c(2, 4, 6))
evaluate(median, c(7, 40, 9))
evaluate(floor, 11.1)
submit()
evaluate(stdev, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/remainder.R')
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/telegram.R')
telegram("Who", "are", "you?")
submit()
telegram("Who", "are", "you?")
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/mad_libs.R')
mad_libs("home", "stinky", "couch")
mad_libs(place="home", adjective="stinky", noun="couch")
submit()
mad_libs(place="home", adjective="stinky", noun="couch")
source('C:/Users/BECCA~1.SMI/AppData/Local/Temp/RtmpyyUbKz/bin_op.R')
"Good" %p% "job!"
submit()
"I" %p% "love" %p% "R!"
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
ls()
where("mean")
library(pryr)
install.packages("pryr")
library(pryr)
where("mean")
where("x")
x<-3
where("x")
rm(x)
identical(globalenv(), baseenv())
-identical(globalenv(), baseenv())
e<-new.env()
y<-1
f<-function(x)x+y
ls()
environment(f)
e$g<-function()
1
g
e$g
e$g()
environment(e$g)
ls()
ls$e
where("g")
where(g)
get("g", envir = "e")
get("g", envir = e)
get(g(), envir = e)
get("g()", envir = e)
ls(e)
getwd()
setwd("~/R/Programming Assignment 2/ProgrammingAssignment2")
source('~/R/Programming Assignment 2/ProgrammingAssignment2/cachematrix.R')
